# status bar

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#h #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# default statusbar colors
set -g status-fg white
set -g status-bg black

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Highlight active window in red as default and will be turned to pink in "zoomed" mode
setw -g window-status-current-format "#[fg=#{?#{window_zoomed_flag},pink,red}]#[reverse] #I:#W #[default]"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# Toggle mouse mode with Prefix m
bind m set-option -g mouse \; display-message "Mouse mode is now: #{?mouse,on,off}"
bind-key -T copy-mode MouseDrag1Pane send-keys -X begin-selection
# Note
# To keep selected text being selected, keep Shift before releasing mouse

# color
set -g default-terminal 'screen-256color'
#set -g default-terminal "xterm-256color"

# Configure copy and paste using Vim keybindings
setw -g mode-keys vi  # Set copy mode to use Vim keybindings

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use 'v' to begin selection and 'y' to copy selected text to clipboard
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"

# Use Prefix + 'P' to paste from clipboard
bind-key 'P' run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
